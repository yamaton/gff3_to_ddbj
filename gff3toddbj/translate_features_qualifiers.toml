## ================================================================================
## Rename features (GFF3 type -> Feature key)
[five_prime_UTR]
feature_key = "5'UTR"

[five_prime_utr]
feature_key = "5'UTR"

[three_prime_UTR]
feature_key = "3'UTR"

[three_prime_utr]
feature_key = "3'UTR"

# http://sequenceontology.org/browser/current_svn/term/SO:0000478
[C_gene_segment]
feature_key = "C_region"

# http://sequenceontology.org/browser/current_svn/term/SO:0000458
[D_gene_segment]
feature_key = "D_region"

# http://sequenceontology.org/browser/current_svn/term/SO:0000297
[D_loop]
feature_key = "D-loop"

[J_gene_segment]
feature_key = "J_segment"

[V_gene_segment]
feature_key = "V_segment"

# "region" in GFF3 column 3 corresponds to "source"
# https://https.ncbi.nlm.nih.gov/datasets/docs/reference-docs/file-formats/about-ncbi-gff3/#the-source-region-feature
[region]
feature_key = "source"

[transcript]
feature_key = "misc_RNA"   # [NOTE] sometimes "mRNA", sometimes "misc_RNA"

# http://www.sequenceontology.org/browser/current_svn/term/SO:0001503
# processed_transcript takes transcript whose corrsponding feature is misc_RNA.
# Then, processed_transcript is regarded as misc_RNA in absense of the parent?
[processed_transcript]
feature_key = "misc_RNA"

# http://sequenceontology.org/browser/current_svn/term/SO:0000483
# Parent of nc_primary_transcript is primary_transcript.
# And primary_transcript is translated to "precursor_RNA" / "prim_transcript" feature.
# But neighther exists in the DDBJ matrix...
[nc_primary_transcript]
feature_key = "precursor_RNA"

[primary_transcript]
feature_key = "precursor_RNA"

# http://sequenceontology.org/browser/current_svn/term/SO:0002249
[mature_protein_region_of_CDS]
feature_key = "mat_peptide"

# http://sequenceontology.org/browser/current_svn/term/SO:0001037
[mobile_genetic_element]
feature_key = "mobile_element"

# http://sequenceontology.org/browser/current_svn/term/SO:0000305
[modified_DNA_base]
feature_key = "modified_base"

# http://sequenceontology.org/browser/current_svn/term/SO:0000409
[binding_site]
feature_key = "misc_binding"

# http://sequenceontology.org/browser/current_svn/term/SO:0005850
[primer_binding_site]
feature_key = "primer_bind"

# http://sequenceontology.org/browser/current_svn/term/SO:0000410
[protein_binding_site]
feature_key = "protein_bind"

# http://sequenceontology.org/browser/current_svn/term/SO:0000413
[sequence_difference]
feature_key = "misc_difference"

# http://sequenceontology.org/browser/current_svn/term/SO:0000418
[signal_peptide]
feature_key = "sig_peptide"

# http://sequenceontology.org/browser/current_svn/term/SO:0000296
[origin_of_replication]
feature_key = "rep_origin"

# http://sequenceontology.org/browser/current_svn/term/SO:0002250
[propeptide_region_of_CDS]
feature_key = "propeptide"

# http://sequenceontology.org/browser/current_svn/term/SO:0000002
[sequence_secondary_structure]
feature_key = "misc_structure"


## ================================================================================
## Rename qualifiers (GFF3 attribute --> Qualifier key)

## [NOTE] Start with __ANY__. to indicate qualifiers for any features

## ------------- BEGIN ------------------
# Originally from GFF3 columns ("source", "score", "phase")
# but translated to qualifier by the GFF parser.
[__ANY__.source]
qualifier_key = "note"
qualifier_value_prefix =  'source:'

[__ANY__.score]
qualifier_key = "score"

[__ANY__.phase]
qualifier_key = "codon_start"  # 0-based in GFF3. Will be transformed to 1-based.
## ------------- END --------------------

# --------------------------------------------
# Found in GFF3 attributes

# For example, ID=xyz in GFF3 attribute
# becomes /note="ID:xyz"
[__ANY__.ID]
qualifier_key = "note"
qualifier_value_prefix =  "ID:"

[__ANY__.Note]
qualifier_key = "note"

[__ANY__.Dbxref]
qualifier_key = "db_xref"

[__ANY__.gene_name]
qualifier_key = "gene"

[__ANY__.geneID]
qualifier_key = "gene"

[__ANY__.description]
qualifier_key = "product"

[__ANY__.eC_number]
qualifier_key = "EC_number"

[__ANY__.ec_number]
qualifier_key = "EC_number"

[__ANY__.locus_tag]
qualifier_key = "locus_tag"
qualifier_value_prefix =  "<dummy>"

[__ANY__._Description]
qualifier_key = "product"


## ================================================================================
## Translate a GFF3 type (= column 3 value) into a pair of (Feature, Qualifier)

## ------------- BEGIN ------------------
## https://www.ddbj.nig.ac.jp/news/ja/2007-12-07.html

## In this case, "type" value miRNA in GFF3 is translated to
## ncRNA feature with /ncRNA_class="miRNA" qualifier
[miRNA]
feature_key = "ncRNA"
qualifier_key = "ncRNA_class"
qualifier_value = "miRNA"

[piRNA]
feature_key = "ncRNA"
qualifier_key = "ncRNA_class"
qualifier_value = "piRNA"

[rasiRNA]
feature_key = "ncRNA"
qualifier_key = "ncRNA_class"
qualifier_value = "rasiRNA"

[scRNA]
feature_key = "ncRNA"
qualifier_key = "ncRNA_class"
qualifier_value = "scRNA"

[siRNA]
feature_key = "ncRNA"
qualifier_key = "ncRNA_class"
qualifier_value = "siRNA"

[snoRNA]
feature_key = "ncRNA"
qualifier_key = "ncRNA_class"
qualifier_value = "snoRNA"

[snRNA]
feature_key = "ncRNA"
qualifier_key = "ncRNA_class"
qualifier_value = "snRNA"
## ------------- END --------------------


# http://www.sequenceontology.org/browser/current_svn/term/SO:0001877
[lncRNA]
feature_key = "ncRNA"
qualifier_key = "ncRNA_class"
qualifier_value = "lncRNA"

# this does not conform SO, but probably needed in absense of lncRNA
[lincRNA]
feature_key = "ncRNA"
qualifier_key = "ncRNA_class"
qualifier_value = "lncRNA"

# http://sequenceontology.org/browser/current_svn/term/SO:0000336
[pseudogene]
feature_key = "gene"
qualifier_key = "pseudo"
qualifier_value = ""

# http://sequenceontology.org/browser/current_svn/term/SO:0002087
[pseudogenic_CDS]
feature_key = "CDS"
qualifier_key = "pseudo"
qualifier_value = ""

# http://www.sequenceontology.org/browser/current_svn/term/SO:0000516
[pseudogenic_transcript]
feature_key = "misc_RNA"
qualifier_key = "pseudo"
qualifier_value = ""

# http://www.sequenceontology.org/browser/current_svn/term/SO:0000043
[processed_pseudogene]
feature_key = "gene"
qualifier_key = "pseudogene"
qualifier_value = "processed"

# http://sequenceontology.org/browser/current_svn/term/SO:0001411
[biological_region]
feature_key = "misc_feature"
qualifier_key = "note"
qualifier_value = "biological_region"

# http://sequenceontology.org/browser/current_svn/term/SO:0000172
[CAAT_signal]
feature_key = "regulatory"
qualifier_key = "regulatory_class"
qualifier_value = "CAAT_signal"

# http://sequenceontology.org/browser/current_svn/term/SO:0000714
[nucleotide_motif]
feature_key = "misc_feature"
qualifier_key = "note"
qualifier_value = "nucleotide_motif"

# http://sequenceontology.org/browser/current_svn/term/SO:0001059
[sequence_alteration]
feature_key = "variation"
qualifier_key = "note"
qualifier_value = "sequence_alteration"

# http://sequenceontology.org/browser/current_svn/term/SO:0002197
[processed_pseudogenic_tRNA]
feature_key = "tRNA"
qualifier_key = "pseudogene"
qualifier_value = "processed"

# http://sequenceontology.org/browser/current_svn/term/SO:0002194
[unprocessed_pseudogenic_rRNA]
feature_key = "rRNA"
qualifier_key = "pseudogene"
qualifier_value = "unprocessed"

# http://sequenceontology.org/browser/current_svn/term/SO:0000705
[tandem_repeat]
feature_key = "repeat_region"
qualifier_key = "rpt_type"
qualifier_value = "tandem"



## ================================================================================
## Translate a GFF3 attribute (with certain value) into a Feature

## In this case, RNA "type" with biotype="misc_RNA" in GFF is translated to
## "misc_RNA" feature in annotation.
[RNA.biotype]
attribute_value = "misc_RNA"
feature_key = "misc_RNA"
