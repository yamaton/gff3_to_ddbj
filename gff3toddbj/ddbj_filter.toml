source = [
"altitude",
"bio_material",
"cell_line",
"cell_type",
"chromosome",
"clone",
"clone_lib",
"collected_by",
"collection_date",
"country",
"cultivar",
"culture_collection",
"dev_stage",
"ecotype",
"environmental_sample",
"focus",
"germline",
"haplogroup",
"haplotype",
"host",
"identified_by",
"isolate",
"isolation_source",
"lab_host",
"lat_lon",
"macronuclear",
"map",
"mating_type",
"mol_type",
"note",
"organelle",
"organism",
"PCR_primers",
"plasmid",
"proviral",
"rearranged",
"segment",
"serotype",
"serovar",
"sex",
"specimen_voucher",
"strain",
"submitter_seqid",
"sub_clone",
"sub_species",
"sub_strain",
"tissue_type",
"transgenic",
"variety",
"ff_definition",  # https://www.ddbj.nig.ac.jp/ddbj/file-format-e.html#ff_definition
]

assembly_gap = ["estimated_length", "gap_type", "linkage_evidence"]

C_region = [
"allele",
"experiment",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"note",
"pseudo",
"pseudogene",
]

CDS = [
"allele",
"artificial_location",
"circular_RNA",
"codon_start",
"EC_number",
"exception",
"experiment",
"function",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"note",
"operon",
"product",
"pseudo",
"pseudogene",
"ribosomal_slippage",
"translation",
"transl_except",
"transl_table",
"trans_splicing",
]

centromere = ["experiment", "inference", "note"]

D-loop = ["experiment", "gene", "gene_synonym", "inference", "note"]

D_segment = [
"allele",
"experiment",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"note",
"pseudo",
"pseudogene",
]

exon = [
"experiment",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"note",
"number",
"pseudo",
"pseudogene",
"trans_splicing",
]

gap = ["estimated_length", "experiment", "note"]

intron = [
"experiment",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"note",
"number",
"pseudo",
"pseudogene",
"trans_splicing",
]

J_segment = [
"allele",
"experiment",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"note",
"pseudo",
"pseudogene",
]

mat_peptide = [
"allele",
"EC_number",
"experiment",
"function",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"note",
"product",
"pseudo",
"pseudogene",
]

misc_binding = [
"bound_moiety",
"experiment",
"function",
"gene",
"gene_synonym",
"inference",
"note",
]

misc_difference = [
"experiment",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"note",
"replace",
]

misc_feature = [
"allele",
"experiment",
"function",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"note",
"product",
"pseudo",
"pseudogene",
]

misc_RNA = [
"experiment",
"function",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"note",
"operon",
"pseudo",
"pseudogene",
"trans_splicing",
]

misc_structure = [
"experiment",
"function",
"gene",
"gene_synonym",
"inference",
"note",
]

mobile_element = [
"experiment",
"gene",
"gene_synonym",
"inference",
"mobile_element_type",
"note",
"rpt_family",
"rpt_type",
]

modified_base = [
"experiment",
"frequency",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"mod_base",
"note",
]

mRNA = [
"allele",
"artificial_location",
"circular_RNA",
"experiment",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"note",
"operon",
"pseudo",
"pseudogene",
"trans_splicing",
]

ncRNA = [
"experiment",
"function",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"ncRNA_class",
"note",
"operon",
"product",
"pseudo",
"pseudogene",
"trans_splicing",
]

operon = [
"allele",
"experiment",
"function",
"inference",
"note",
"operon",
"pseudo",
"pseudogene",
]

oriT = [
"bound_moiety",
"direction",
"experiment",
"inference",
"note",
"rpt_family",
"rpt_type",
"rpt_unit_seq",
]

precursor_RNA = [
"experiment",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"note",
"operon",
"trans_splicing",
]

primer_bind = [
"experiment",
"gene",
"gene_synonym",
"inference",
"note",
"PCR_conditions",
]

propeptide = [
"allele",
"experiment",
"function",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"note",
"product",
"pseudo",
"pseudogene",
]

protein_bind = [
"bound_moiety",
"experiment",
"gene",
"gene_synonym",
"inference",
"note",
"operon",
]

regulatory = [
"allele",
"artificial_location",
"bound_moiety",
"experiment",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"note",
"operon",
"pseudo",
"pseudogene",
"regulatory_class",
]

repeat_region = [
"experiment",
"gene",
"gene_synonym",
"inference",
"note",
"rpt_family",
"rpt_type",
"rpt_unit_seq",
"satellite",
]

rep_origin = [
"direction",
"experiment",
"function",
"gene",
"gene_synonym",
"inference",
"note",
]

rRNA = [
"experiment",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"note",
"operon",
"product",
"pseudo",
"pseudogene",
]

sig_peptide = [
"allele",
"experiment",
"function",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"note",
"pseudo",
"pseudogene",
]

stem_loop = [
"experiment",
"function",
"gene",
"gene_synonym",
"inference",
"note",
"operon",
]

telomere = ["experiment", "inference", "note", "rpt_type", "rpt_unit_seq"]

tmRNA = [
"experiment",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"note",
"product",
"pseudo",
"pseudogene",
"tag_peptide",
]

transit_peptide = [
"allele",
"experiment",
"function",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"note",
"pseudo",
"pseudogene",
]

tRNA = [
"anticodon",
"circular_RNA",
"experiment",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"note",
"product",
"pseudo",
"pseudogene",
"trans_splicing",
]

unsure = ["experiment", "gene", "gene_synonym", "locus_tag", "note", "replace"]

V_region = [
"allele",
"experiment",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"note",
"pseudo",
"pseudogene",
]

V_segment = [
"allele",
"experiment",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"note",
"pseudo",
"pseudogene",
]

variation = [
"allele",
"experiment",
"frequency",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"note",
"replace",
]

"3'UTR" = [
"allele",
"experiment",
"function",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"note",
"trans_splicing",
]

"5'UTR" = [
"allele",
"experiment",
"function",
"gene",
"gene_synonym",
"inference",
"locus_tag",
"note",
"trans_splicing",
]

# https://www.ddbj.nig.ac.jp/ddbj/file-format-e.html#primary_contig
"PRIMARY_CONTIG" = ["entry", "primary_bases", "complement"]
